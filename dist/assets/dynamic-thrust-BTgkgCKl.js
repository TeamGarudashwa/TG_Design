import"./style-hLBxd820.js";import"./export-utils-B9yzkw5u.js";const _=(()=>{let u,v,A,c,m,I,b,w,E,h,f,y,C=null;function J(){const e=document.getElementById("toggle-chart"),t=document.querySelector(".chart-container");e&&t&&e.addEventListener("click",()=>{t.style.display=t.style.display==="none"?"block":"none",e.innerHTML=t.style.display==="none"?'<i class="fas fa-chart-line"></i> Show Chart':'<i class="fas fa-chart-bar"></i> Hide Chart',t.style.display!=="none"&&C&&setTimeout(()=>{C.resize()},10)})}function Y(e){console.log("Updating chart with results:",e);const t=document.getElementById("thrustChart");if(!t){console.error("Chart canvas element not found");return}const n=document.getElementById("chart-loading");if(n&&(n.style.display="flex"),C){try{C.destroy()}catch(l){console.warn("Error destroying previous chart:",l)}C=null}const a=e.map(l=>l.velocity.toFixed(1)),s=e.map(l=>l.thrustAvailable),r=e.map(l=>l.thrustRequired),o=Math.max(...s),i=Math.max(...r),x=((o-i)/i*100).toFixed(1);document.getElementById("max-thrust").textContent=`${o.toFixed(2)} N`,document.getElementById("max-required").textContent=`${i.toFixed(2)} N`,document.getElementById("thrust-margin").textContent=`${x}%`;const p={type:"line",data:{labels:a,datasets:[{label:"Thrust Available (N)",data:s,borderColor:"#3b82f6",backgroundColor:"rgba(59, 130, 246, 0.1)",borderWidth:2,tension:.4,pointRadius:3,pointHoverRadius:5,fill:!0,animation:{duration:1e3,easing:"easeOutQuart"}},{label:"Thrust Required (N)",data:r,borderColor:"#ef4444",backgroundColor:"rgba(239, 68, 68, 0.1)",borderWidth:2,tension:.4,pointRadius:3,pointHoverRadius:5,fill:!0,animation:{duration:1e3,easing:"easeOutQuart"}}]},options:{responsive:!0,maintainAspectRatio:!1,animation:{duration:1e3,easing:"easeInOutQuart"},plugins:{legend:{position:"top",labels:{color:getComputedStyle(document.documentElement).getPropertyValue("--text-color"),font:{family:"Poppins, sans-serif",size:12},padding:20,usePointStyle:!0,boxWidth:8}},tooltip:{mode:"index",intersect:!1,backgroundColor:"rgba(0, 0, 0, 0.8)",titleFont:{family:"Poppins, sans-serif",size:12,weight:"bold"},bodyFont:{family:"Poppins, sans-serif",size:12},padding:10,callbacks:{label:function(l){let d=l.dataset.label||"";return d&&(d+=": "),l.parsed.y!==null&&(d+=l.parsed.y.toFixed(2)+" N"),d}}}},scales:{x:{title:{display:!0,text:"Velocity (m/s)",color:getComputedStyle(document.documentElement).getPropertyValue("--text-color"),font:{family:"Poppins, sans-serif",weight:"500",size:12},padding:{top:10}},grid:{color:getComputedStyle(document.documentElement).getPropertyValue("--border-color"),drawBorder:!1},ticks:{color:getComputedStyle(document.documentElement).getPropertyValue("--text-color"),font:{family:"Poppins, sans-serif",size:11}}},y:{title:{display:!0,text:"Thrust (N)",color:getComputedStyle(document.documentElement).getPropertyValue("--text-color"),font:{family:"Poppins, sans-serif",weight:"500",size:12},padding:{bottom:10}},grid:{color:getComputedStyle(document.documentElement).getPropertyValue("--border-color"),drawBorder:!1},ticks:{color:getComputedStyle(document.documentElement).getPropertyValue("--text-color"),font:{family:"Poppins, sans-serif",size:11}},beginAtZero:!0}},interaction:{mode:"nearest",axis:"x",intersect:!1},onHover:(l,d)=>{const T=l.native.target;T.style.cursor=d[0]?"pointer":"default"},onClick:(l,d)=>{if(d.length>0){const T=d[0],S=T.datasetIndex,B=T.index;console.log("Clicked on point:",{dataset:p.data.datasets[S].label,x:p.data.labels[B],y:p.data.datasets[S].data[B]})}}}},O=t.getContext("2d");C=new Chart(O,p),n&&setTimeout(()=>{n.style.opacity="0",setTimeout(()=>{n.style.display="none",n.style.opacity="1"},300)},500),G()}function G(){document.querySelectorAll("#results-body tr").forEach((t,n)=>{t.style.opacity="0",t.style.transform="translateY(10px)",t.style.transition=`opacity 0.3s ease ${n*.05}s, transform 0.3s ease ${n*.05}s`,t.offsetHeight,t.style.opacity="1",t.style.transform="translateY(0)"})}function U(){console.log("Dynamic Thrust Calculator initializing..."),K(),$(),M(),Q(),J();const e=document.getElementById("export-csv");e&&e.addEventListener("click",st),console.log("Dynamic Thrust Calculator initialized")}function K(){u=document.getElementById("calculate-thrust"),v=document.getElementById("reset-thrust"),A=document.getElementById("results-section"),c=document.getElementById("results-body"),m=document.getElementById("k-factor"),I=document.getElementById("start-velocity"),b=document.getElementById("end-velocity"),w=document.getElementById("step-velocity"),E=document.getElementById("cd0"),h=document.getElementById("prop-diameter"),f=document.getElementById("prop-pitch"),y=document.getElementById("rpm")}function Q(){u&&u.addEventListener("click",q),v&&v.addEventListener("click",k),document.querySelectorAll('input[type="number"]').forEach(e=>{e.addEventListener("input",D)})}function k(){console.log("Resetting calculator..."),I&&(I.value="0"),b&&(b.value="50"),w&&(w.value="5"),E&&(E.value="0.02"),h&&(h.value="10"),f&&(f.value="7"),y&&(y.value="8000"),A&&(A.style.display="none"),c&&(c.innerHTML=""),m&&(m.textContent="-"),localStorage.removeItem("dynamicThrustInputs"),console.log("Calculator reset")}function D(){const e={startVel:I?.value||"0",endVel:b?.value||"50",stepVel:w?.value||"5",cd0:E?.value||"0.02",propDia:h?.value||"10",propPitch:f?.value||"7",rpm:y?.value||"8000"};localStorage.setItem("dynamicThrustInputs",JSON.stringify(e))}function $(){const e=localStorage.getItem("dynamicThrustInputs");if(e)try{const t=JSON.parse(e);I&&(I.value=t.startVel||"0"),b&&(b.value=t.endVel||"50"),w&&(w.value=t.stepVel||"5"),E&&(E.value=t.cd0||"0.02"),h&&(h.value=t.propDia||"10"),f&&(f.value=t.propPitch||"7"),y&&(y.value=t.rpm||"8000"),console.log("Loaded saved inputs:",t)}catch(t){console.error("Error loading saved inputs:",t),localStorage.removeItem("dynamicThrustInputs")}}function M(){const e=R(),t=F();let n=document.getElementById("warning-message");!n&&document.querySelector(".calculator-container")&&(n=document.createElement("div"),n.id="warning-message",n.style.color="var(--danger-color)",n.style.margin="1rem 0",document.querySelector(".calculator-container").insertBefore(n,document.querySelector(".input-section"))),n&&(!e||!t?(n.textContent="Warning: Wing parameters not found. Please set up wing parameters first.",u&&(u.disabled=!0)):(n.textContent="",u&&(u.disabled=!1)))}function q(){try{const e=parseFloat(I.value),t=parseFloat(b.value),n=parseFloat(w.value),a=parseFloat(E.value),s=parseFloat(h.value),r=parseFloat(f.value),o=parseFloat(y.value);if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(a)||isNaN(s)||isNaN(r)||isNaN(o))throw new Error("Please enter valid numbers for all fields");if(e<0||t<=e||n<=0)throw new Error("Invalid velocity range or step size");if(a<=0||s<=0||r<=0||o<=0)throw new Error("All values must be greater than zero");let i=W();if(i===null||isNaN(i)||i<=0){if(!confirm("Aircraft weight not found. Use default weight of 10 kg for calculations?"))return;i=10;const P=JSON.parse(localStorage.getItem("wingParametersInputs")||"{}");P.weight=i,localStorage.setItem("wingParametersInputs",JSON.stringify(P))}const x=R();if(!x||x<=0){confirm(`Wing area not found. Please calculate wing parameters first.

Would you like to be redirected to the Wing Parameters calculator?`)&&(window.location.href="wing-parameter.html");return}const p=F();if(!p||p<=0){confirm(`Wing span not found. Please calculate wing parameters first.

Would you like to be redirected to the Wing Parameters calculator?`)&&(window.location.href="wing-parameter.html");return}const O=s*.0254,l=r*.0254,d=p*p/x,T=1/(22/7*.8*d),S=[],V=Math.floor((t-e)/n+1e-10)+1;console.log(`Generating ${V} velocity points from ${e} to ${t} m/s with step ${n}`);for(let g=0;g<V;g++){const P=e+g*n,N=Math.min(P,t);console.log(`Point ${g+1}/${V}: Velocity = ${N} m/s`);const z=1.225,L=N*N,tt=z*L*x*a/2,et=2*T*i*i*9.81*9.81/(z*L*x),nt=Math.max(tt+et,0),ot=4.4*Math.pow(10,-8)*o*(Math.pow(s,3.5)/Math.sqrt(r)),at=o*r*4.23*Math.pow(10,-4)-N,H=Math.max(ot*at,0),rt=H/9.81;S.push({velocity:N,thrustRequired:nt,thrustAvailable:H,thrustAvailableKg:rt})}console.log("Generated velocity points:",S.map(g=>g.velocity));const X=Z(S);j(T,S,X)}catch(e){console.error("Error in thrust calculation:",e),alert("An error occurred during calculation: "+e.message)}}function Z(e){try{if(e&&e.length>0){const t=e.map(o=>o.thrustAvailable||o.thrust),n=Math.max(...t),a=Math.min(...t),s=e.map(o=>({velocity:o.velocity,thrust:o.thrustAvailable||o.thrust,drag:o.thrustRequired||0,netThrust:(o.thrustAvailable||o.thrust)-(o.thrustRequired||0)})),r={maxThrust:n,minThrust:a,thrustRange:{min:a,max:n,average:t.reduce((o,i)=>o+i,0)/t.length},thrustCurve:s,rpm:parseFloat(y.value)||0,propDiameter:parseFloat(h.value)||0,propPitch:parseFloat(f.value)||0,timestamp:new Date().toISOString()};return localStorage.setItem("dynamicThrustData",JSON.stringify(r)),console.log("=== Thrust Range ==="),console.log(`Maximum Thrust: ${n.toFixed(2)} N`),console.log(`Minimum Thrust: ${a.toFixed(2)} N`),console.log(`Average Thrust: ${r.thrustRange.average.toFixed(2)} N`),console.log("First few points of Thrust Curve:",s.slice(0,3)),r}}catch(t){throw console.error("Error saving thrust results:",t),t}return null}function j(e,t,n){try{console.log("Displaying results...");const a=document.getElementById("results-section");if(a?(a.style.display="block",a.style.opacity="1",a.style.visibility="visible"):console.error("Results section element not found"),m?m.textContent=e.toFixed(6):console.warn("K factor element not found"),Y(t),c){c.innerHTML="",t.forEach(r=>{const o=document.createElement("tr");o.innerHTML=`
                        <td>${r.velocity.toFixed(2)}</td>
                        <td>${r.thrustAvailable.toFixed(2)}</td>
                        <td>${(r.thrustAvailable/9.81).toFixed(2)}</td>
                        <td>${r.thrustRequired.toFixed(2)}</td>
                    `,c.appendChild(o)});const s=document.getElementById("results-table");s?(s.style.display="table",s.style.width="100%",s.style.marginTop="20px"):console.warn("Results table element not found")}else console.error("Results body element not found");a&&a.scrollIntoView({behavior:"smooth"})}catch(a){console.error("Error displaying results:",a),alert("An error occurred while displaying results: "+a.message)}}function W(){try{const e=localStorage.getItem("wingParametersInputs");if(e){const n=JSON.parse(e);if(n&&(n.weight||n.weight===0))return parseFloat(n.weight)}const t=localStorage.getItem("wingAreaCalculatorData");if(t){const n=JSON.parse(t);if(n&&(n.weight||n.weight===0))return parseFloat(n.weight)}return null}catch(e){return console.error("Error getting aircraft weight:",e),null}}function R(){try{const e=localStorage.getItem("wingParametersInputs");if(e){const t=JSON.parse(e);if(t&&t.surfaceArea)return parseFloat(t.surfaceArea)}return null}catch(e){return console.error("Error getting wing area:",e),null}}function F(){try{const e=localStorage.getItem("wingParametersInputs");if(e){const t=JSON.parse(e);if(t&&t.wingspan)return parseFloat(t.wingspan)}return null}catch(e){return console.error("Error getting wing span:",e),null}}return window.getWingArea=R,window.getWingSpan=F,window.getAircraftWeight=W,{init:U,calculateThrust:q,resetCalculator:k,saveInputs:D,loadInputs:$,checkWingParameters:M,getResults:function(){return[]}}})();document.addEventListener("DOMContentLoaded",()=>{_.init()});function st(){const u=_.getResults();if(!u||u.length===0){alert("No data to export");return}let v="data:text/csv;charset=utf-8,";v+=`Velocity (m/s),Thrust Available (N),Thrust Available (kgf),Thrust Required (N)
`,u.forEach(m=>{v+=`${m.velocity.toFixed(2)},${m.thrustAvailable.toFixed(2)},${(m.thrustAvailable/9.81).toFixed(2)},${m.thrustRequired.toFixed(2)}
`});const A=encodeURI(v),c=document.createElement("a");c.setAttribute("href",A),c.setAttribute("download",`thrust_analysis_${new Date().toISOString().slice(0,10)}.csv`),document.body.appendChild(c),c.click(),document.body.removeChild(c)}
